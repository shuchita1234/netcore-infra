trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  backendService: 'azure-terraform'          # Azure service connection name
  backendResourceGroup: 'WisdomPetMedicine-RG'
  backendStorageAccount: 'storageaccount30808'
  backendContainer: 'netcoreapp'
  backendKey: 'dev.tfstate'
  workingDir: '$(System.DefaultWorkingDirectory)'

stages:
- stage: Terraform
  jobs:
  - job: TerraformInit
    displayName: 'Terraform Init and Plan'
    steps:

    - task: TerraformInstaller@1
      displayName: 'Install Terraform'
      inputs:
        terraformVersion: 'latest'

    - checkout: self

    - task: TerraformTaskV4@4
      displayName: 'Terraform Init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(workingDir)'
        backendServiceArm: '$(backendService)'
        backendAzureRmResourceGroupName: '$(backendResourceGroup)'
        backendAzureRmStorageAccountName: '$(backendStorageAccount)'
        backendAzureRmContainerName: '$(backendContainer)'
        backendAzureRmKey: '$(backendKey)'

    - task: TerraformTaskV4@4
      displayName: 'Terraform Plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(workingDir)'
